"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@fortawesome+react-fontawesome@0.2.0_@fortawesome+fontawesome-svg-core@6.5.1_react@18.2.0";
exports.ids = ["vendor-chunks/@fortawesome+react-fontawesome@0.2.0_@fortawesome+fontawesome-svg-core@6.5.1_react@18.2.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@fortawesome+react-fontawesome@0.2.0_@fortawesome+fontawesome-svg-core@6.5.1_react@18.2.0/node_modules/@fortawesome/react-fontawesome/index.es.js":
/*!******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@fortawesome+react-fontawesome@0.2.0_@fortawesome+fontawesome-svg-core@6.5.1_react@18.2.0/node_modules/@fortawesome/react-fontawesome/index.es.js ***!
  \******************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FontAwesomeIcon: () => (/* binding */ FontAwesomeIcon)\n/* harmony export */ });\n/* harmony import */ var _fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fortawesome/fontawesome-svg-core */ \"(ssr)/./node_modules/.pnpm/@fortawesome+fontawesome-svg-core@6.5.1/node_modules/@fortawesome/fontawesome-svg-core/index.mjs\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.0.4_react-dom@18.2.0_react@18.2.0_sass@1.69.6/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread2(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n// Get CSS class list from a props object\nfunction classList(props) {\n    var _classes;\n    var beat = props.beat, fade = props.fade, beatFade = props.beatFade, bounce = props.bounce, shake = props.shake, flash = props.flash, spin = props.spin, spinPulse = props.spinPulse, spinReverse = props.spinReverse, pulse = props.pulse, fixedWidth = props.fixedWidth, inverse = props.inverse, border = props.border, listItem = props.listItem, flip = props.flip, size = props.size, rotation = props.rotation, pull = props.pull; // map of CSS class names to properties\n    var classes = (_classes = {\n        \"fa-beat\": beat,\n        \"fa-fade\": fade,\n        \"fa-beat-fade\": beatFade,\n        \"fa-bounce\": bounce,\n        \"fa-shake\": shake,\n        \"fa-flash\": flash,\n        \"fa-spin\": spin,\n        \"fa-spin-reverse\": spinReverse,\n        \"fa-spin-pulse\": spinPulse,\n        \"fa-pulse\": pulse,\n        \"fa-fw\": fixedWidth,\n        \"fa-inverse\": inverse,\n        \"fa-border\": border,\n        \"fa-li\": listItem,\n        \"fa-flip\": flip === true,\n        \"fa-flip-horizontal\": flip === \"horizontal\" || flip === \"both\",\n        \"fa-flip-vertical\": flip === \"vertical\" || flip === \"both\"\n    }, _defineProperty(_classes, \"fa-\".concat(size), typeof size !== \"undefined\" && size !== null), _defineProperty(_classes, \"fa-rotate-\".concat(rotation), typeof rotation !== \"undefined\" && rotation !== null && rotation !== 0), _defineProperty(_classes, \"fa-pull-\".concat(pull), typeof pull !== \"undefined\" && pull !== null), _defineProperty(_classes, \"fa-swap-opacity\", props.swapOpacity), _classes); // map over all the keys in the classes object\n    // return an array of the keys where the value for the key is not null\n    return Object.keys(classes).map(function(key) {\n        return classes[key] ? key : null;\n    }).filter(function(key) {\n        return key;\n    });\n}\n// Camelize taken from humps\n// humps is copyright Â© 2012+ Dom Christie\n// Released under the MIT license.\n// Performant way to determine if object coerces to a number\nfunction _isNumerical(obj) {\n    obj = obj - 0; // eslint-disable-next-line no-self-compare\n    return obj === obj;\n}\nfunction camelize(string) {\n    if (_isNumerical(string)) {\n        return string;\n    } // eslint-disable-next-line no-useless-escape\n    string = string.replace(/[\\-_\\s]+(.)?/g, function(match, chr) {\n        return chr ? chr.toUpperCase() : \"\";\n    }); // Ensure 1st char is always lowercase\n    return string.substr(0, 1).toLowerCase() + string.substr(1);\n}\nvar _excluded = [\n    \"style\"\n];\nfunction capitalize(val) {\n    return val.charAt(0).toUpperCase() + val.slice(1);\n}\nfunction styleToObject(style) {\n    return style.split(\";\").map(function(s) {\n        return s.trim();\n    }).filter(function(s) {\n        return s;\n    }).reduce(function(acc, pair) {\n        var i = pair.indexOf(\":\");\n        var prop = camelize(pair.slice(0, i));\n        var value = pair.slice(i + 1).trim();\n        prop.startsWith(\"webkit\") ? acc[capitalize(prop)] = value : acc[prop] = value;\n        return acc;\n    }, {});\n}\nfunction convert(createElement, element) {\n    var extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (typeof element === \"string\") {\n        return element;\n    }\n    var children = (element.children || []).map(function(child) {\n        return convert(createElement, child);\n    });\n    /* eslint-disable dot-notation */ var mixins = Object.keys(element.attributes || {}).reduce(function(acc, key) {\n        var val = element.attributes[key];\n        switch(key){\n            case \"class\":\n                acc.attrs[\"className\"] = val;\n                delete element.attributes[\"class\"];\n                break;\n            case \"style\":\n                acc.attrs[\"style\"] = styleToObject(val);\n                break;\n            default:\n                if (key.indexOf(\"aria-\") === 0 || key.indexOf(\"data-\") === 0) {\n                    acc.attrs[key.toLowerCase()] = val;\n                } else {\n                    acc.attrs[camelize(key)] = val;\n                }\n        }\n        return acc;\n    }, {\n        attrs: {}\n    });\n    var _extraProps$style = extraProps.style, existingStyle = _extraProps$style === void 0 ? {} : _extraProps$style, remaining = _objectWithoutProperties(extraProps, _excluded);\n    mixins.attrs[\"style\"] = _objectSpread2(_objectSpread2({}, mixins.attrs[\"style\"]), existingStyle);\n    /* eslint-enable */ return createElement.apply(void 0, [\n        element.tag,\n        _objectSpread2(_objectSpread2({}, mixins.attrs), remaining)\n    ].concat(_toConsumableArray(children)));\n}\nvar PRODUCTION = false;\ntry {\n    PRODUCTION = \"development\" === \"production\";\n} catch (e) {}\nfunction log() {\n    if (!PRODUCTION && console && typeof console.error === \"function\") {\n        var _console;\n        (_console = console).error.apply(_console, arguments);\n    }\n}\nfunction normalizeIconArgs(icon) {\n    // this has everything that it needs to be rendered which means it was probably imported\n    // directly from an icon svg package\n    if (icon && _typeof(icon) === \"object\" && icon.prefix && icon.iconName && icon.icon) {\n        return icon;\n    }\n    if (_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__.parse.icon) {\n        return _fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__.parse.icon(icon);\n    } // if the icon is null, there's nothing to do\n    if (icon === null) {\n        return null;\n    } // if the icon is an object and has a prefix and an icon name, return it\n    if (icon && _typeof(icon) === \"object\" && icon.prefix && icon.iconName) {\n        return icon;\n    } // if it's an array with length of two\n    if (Array.isArray(icon) && icon.length === 2) {\n        // use the first item as prefix, second as icon name\n        return {\n            prefix: icon[0],\n            iconName: icon[1]\n        };\n    } // if it's a string, use it as the icon name\n    if (typeof icon === \"string\") {\n        return {\n            prefix: \"fas\",\n            iconName: icon\n        };\n    }\n}\n// creates an object with a key of key\n// and a value of value\n// if certain conditions are met\nfunction objectWithKey(key, value) {\n    // if the value is a non-empty array\n    // or it's not an array but it is truthy\n    // then create the object with the key and the value\n    // if not, return an empty array\n    return Array.isArray(value) && value.length > 0 || !Array.isArray(value) && value ? _defineProperty({}, key, value) : {};\n}\nvar FontAwesomeIcon = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().forwardRef(function(props, ref) {\n    var iconArgs = props.icon, maskArgs = props.mask, symbol = props.symbol, className = props.className, title = props.title, titleId = props.titleId, maskId = props.maskId;\n    var iconLookup = normalizeIconArgs(iconArgs);\n    var classes = objectWithKey(\"classes\", [].concat(_toConsumableArray(classList(props)), _toConsumableArray(className.split(\" \"))));\n    var transform = objectWithKey(\"transform\", typeof props.transform === \"string\" ? _fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__.parse.transform(props.transform) : props.transform);\n    var mask = objectWithKey(\"mask\", normalizeIconArgs(maskArgs));\n    var renderedIcon = (0,_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__.icon)(iconLookup, _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, classes), transform), mask), {}, {\n        symbol: symbol,\n        title: title,\n        titleId: titleId,\n        maskId: maskId\n    }));\n    if (!renderedIcon) {\n        log(\"Could not find icon\", iconLookup);\n        return null;\n    }\n    var abstract = renderedIcon.abstract;\n    var extraProps = {\n        ref: ref\n    };\n    Object.keys(props).forEach(function(key) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (!FontAwesomeIcon.defaultProps.hasOwnProperty(key)) {\n            extraProps[key] = props[key];\n        }\n    });\n    return convertCurry(abstract[0], extraProps);\n});\nFontAwesomeIcon.displayName = \"FontAwesomeIcon\";\nFontAwesomeIcon.propTypes = {\n    beat: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    border: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    beatFade: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    bounce: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    className: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n    fade: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    flash: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    mask: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().object),\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().array),\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string)\n    ]),\n    maskId: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n    fixedWidth: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    inverse: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    flip: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf([\n        true,\n        false,\n        \"horizontal\",\n        \"vertical\",\n        \"both\"\n    ]),\n    icon: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().object),\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().array),\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string)\n    ]),\n    listItem: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    pull: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf([\n        \"right\",\n        \"left\"\n    ]),\n    pulse: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    rotation: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf([\n        0,\n        90,\n        180,\n        270\n    ]),\n    shake: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    size: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf([\n        \"2xs\",\n        \"xs\",\n        \"sm\",\n        \"lg\",\n        \"xl\",\n        \"2xl\",\n        \"1x\",\n        \"2x\",\n        \"3x\",\n        \"4x\",\n        \"5x\",\n        \"6x\",\n        \"7x\",\n        \"8x\",\n        \"9x\",\n        \"10x\"\n    ]),\n    spin: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    spinPulse: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    spinReverse: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    symbol: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string)\n    ]),\n    title: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n    titleId: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n    transform: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().object)\n    ]),\n    swapOpacity: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool)\n};\nFontAwesomeIcon.defaultProps = {\n    border: false,\n    className: \"\",\n    mask: null,\n    maskId: null,\n    fixedWidth: false,\n    inverse: false,\n    flip: false,\n    icon: null,\n    listItem: false,\n    pull: null,\n    pulse: false,\n    rotation: null,\n    size: null,\n    spin: false,\n    spinPulse: false,\n    spinReverse: false,\n    beat: false,\n    fade: false,\n    beatFade: false,\n    bounce: false,\n    shake: false,\n    symbol: false,\n    title: \"\",\n    titleId: null,\n    transform: null,\n    swapOpacity: false\n};\nvar convertCurry = convert.bind(null, (react__WEBPACK_IMPORTED_MODULE_1___default().createElement));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@fortawesome+react-fontawesome@0.2.0_@fortawesome+fontawesome-svg-core@6.5.1_react@18.2.0/node_modules/@fortawesome/react-fontawesome/index.es.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@fortawesome+react-fontawesome@0.2.0_@fortawesome+fontawesome-svg-core@6.5.1_react@18.2.0/node_modules/@fortawesome/react-fontawesome/index.es.js":
/*!******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@fortawesome+react-fontawesome@0.2.0_@fortawesome+fontawesome-svg-core@6.5.1_react@18.2.0/node_modules/@fortawesome/react-fontawesome/index.es.js ***!
  \******************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FontAwesomeIcon: () => (/* binding */ FontAwesomeIcon)\n/* harmony export */ });\n/* harmony import */ var _fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fortawesome/fontawesome-svg-core */ \"(rsc)/./node_modules/.pnpm/@fortawesome+fontawesome-svg-core@6.5.1/node_modules/@fortawesome/fontawesome-svg-core/index.mjs\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"(rsc)/./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(rsc)/./node_modules/.pnpm/next@14.0.4_react-dom@18.2.0_react@18.2.0_sass@1.69.6/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread2(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n// Get CSS class list from a props object\nfunction classList(props) {\n    var _classes;\n    var beat = props.beat, fade = props.fade, beatFade = props.beatFade, bounce = props.bounce, shake = props.shake, flash = props.flash, spin = props.spin, spinPulse = props.spinPulse, spinReverse = props.spinReverse, pulse = props.pulse, fixedWidth = props.fixedWidth, inverse = props.inverse, border = props.border, listItem = props.listItem, flip = props.flip, size = props.size, rotation = props.rotation, pull = props.pull; // map of CSS class names to properties\n    var classes = (_classes = {\n        \"fa-beat\": beat,\n        \"fa-fade\": fade,\n        \"fa-beat-fade\": beatFade,\n        \"fa-bounce\": bounce,\n        \"fa-shake\": shake,\n        \"fa-flash\": flash,\n        \"fa-spin\": spin,\n        \"fa-spin-reverse\": spinReverse,\n        \"fa-spin-pulse\": spinPulse,\n        \"fa-pulse\": pulse,\n        \"fa-fw\": fixedWidth,\n        \"fa-inverse\": inverse,\n        \"fa-border\": border,\n        \"fa-li\": listItem,\n        \"fa-flip\": flip === true,\n        \"fa-flip-horizontal\": flip === \"horizontal\" || flip === \"both\",\n        \"fa-flip-vertical\": flip === \"vertical\" || flip === \"both\"\n    }, _defineProperty(_classes, \"fa-\".concat(size), typeof size !== \"undefined\" && size !== null), _defineProperty(_classes, \"fa-rotate-\".concat(rotation), typeof rotation !== \"undefined\" && rotation !== null && rotation !== 0), _defineProperty(_classes, \"fa-pull-\".concat(pull), typeof pull !== \"undefined\" && pull !== null), _defineProperty(_classes, \"fa-swap-opacity\", props.swapOpacity), _classes); // map over all the keys in the classes object\n    // return an array of the keys where the value for the key is not null\n    return Object.keys(classes).map(function(key) {\n        return classes[key] ? key : null;\n    }).filter(function(key) {\n        return key;\n    });\n}\n// Camelize taken from humps\n// humps is copyright Â© 2012+ Dom Christie\n// Released under the MIT license.\n// Performant way to determine if object coerces to a number\nfunction _isNumerical(obj) {\n    obj = obj - 0; // eslint-disable-next-line no-self-compare\n    return obj === obj;\n}\nfunction camelize(string) {\n    if (_isNumerical(string)) {\n        return string;\n    } // eslint-disable-next-line no-useless-escape\n    string = string.replace(/[\\-_\\s]+(.)?/g, function(match, chr) {\n        return chr ? chr.toUpperCase() : \"\";\n    }); // Ensure 1st char is always lowercase\n    return string.substr(0, 1).toLowerCase() + string.substr(1);\n}\nvar _excluded = [\n    \"style\"\n];\nfunction capitalize(val) {\n    return val.charAt(0).toUpperCase() + val.slice(1);\n}\nfunction styleToObject(style) {\n    return style.split(\";\").map(function(s) {\n        return s.trim();\n    }).filter(function(s) {\n        return s;\n    }).reduce(function(acc, pair) {\n        var i = pair.indexOf(\":\");\n        var prop = camelize(pair.slice(0, i));\n        var value = pair.slice(i + 1).trim();\n        prop.startsWith(\"webkit\") ? acc[capitalize(prop)] = value : acc[prop] = value;\n        return acc;\n    }, {});\n}\nfunction convert(createElement, element) {\n    var extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (typeof element === \"string\") {\n        return element;\n    }\n    var children = (element.children || []).map(function(child) {\n        return convert(createElement, child);\n    });\n    /* eslint-disable dot-notation */ var mixins = Object.keys(element.attributes || {}).reduce(function(acc, key) {\n        var val = element.attributes[key];\n        switch(key){\n            case \"class\":\n                acc.attrs[\"className\"] = val;\n                delete element.attributes[\"class\"];\n                break;\n            case \"style\":\n                acc.attrs[\"style\"] = styleToObject(val);\n                break;\n            default:\n                if (key.indexOf(\"aria-\") === 0 || key.indexOf(\"data-\") === 0) {\n                    acc.attrs[key.toLowerCase()] = val;\n                } else {\n                    acc.attrs[camelize(key)] = val;\n                }\n        }\n        return acc;\n    }, {\n        attrs: {}\n    });\n    var _extraProps$style = extraProps.style, existingStyle = _extraProps$style === void 0 ? {} : _extraProps$style, remaining = _objectWithoutProperties(extraProps, _excluded);\n    mixins.attrs[\"style\"] = _objectSpread2(_objectSpread2({}, mixins.attrs[\"style\"]), existingStyle);\n    /* eslint-enable */ return createElement.apply(void 0, [\n        element.tag,\n        _objectSpread2(_objectSpread2({}, mixins.attrs), remaining)\n    ].concat(_toConsumableArray(children)));\n}\nvar PRODUCTION = false;\ntry {\n    PRODUCTION = \"development\" === \"production\";\n} catch (e) {}\nfunction log() {\n    if (!PRODUCTION && console && typeof console.error === \"function\") {\n        var _console;\n        (_console = console).error.apply(_console, arguments);\n    }\n}\nfunction normalizeIconArgs(icon) {\n    // this has everything that it needs to be rendered which means it was probably imported\n    // directly from an icon svg package\n    if (icon && _typeof(icon) === \"object\" && icon.prefix && icon.iconName && icon.icon) {\n        return icon;\n    }\n    if (_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__.parse.icon) {\n        return _fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__.parse.icon(icon);\n    } // if the icon is null, there's nothing to do\n    if (icon === null) {\n        return null;\n    } // if the icon is an object and has a prefix and an icon name, return it\n    if (icon && _typeof(icon) === \"object\" && icon.prefix && icon.iconName) {\n        return icon;\n    } // if it's an array with length of two\n    if (Array.isArray(icon) && icon.length === 2) {\n        // use the first item as prefix, second as icon name\n        return {\n            prefix: icon[0],\n            iconName: icon[1]\n        };\n    } // if it's a string, use it as the icon name\n    if (typeof icon === \"string\") {\n        return {\n            prefix: \"fas\",\n            iconName: icon\n        };\n    }\n}\n// creates an object with a key of key\n// and a value of value\n// if certain conditions are met\nfunction objectWithKey(key, value) {\n    // if the value is a non-empty array\n    // or it's not an array but it is truthy\n    // then create the object with the key and the value\n    // if not, return an empty array\n    return Array.isArray(value) && value.length > 0 || !Array.isArray(value) && value ? _defineProperty({}, key, value) : {};\n}\nvar FontAwesomeIcon = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().forwardRef(function(props, ref) {\n    var iconArgs = props.icon, maskArgs = props.mask, symbol = props.symbol, className = props.className, title = props.title, titleId = props.titleId, maskId = props.maskId;\n    var iconLookup = normalizeIconArgs(iconArgs);\n    var classes = objectWithKey(\"classes\", [].concat(_toConsumableArray(classList(props)), _toConsumableArray(className.split(\" \"))));\n    var transform = objectWithKey(\"transform\", typeof props.transform === \"string\" ? _fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__.parse.transform(props.transform) : props.transform);\n    var mask = objectWithKey(\"mask\", normalizeIconArgs(maskArgs));\n    var renderedIcon = (0,_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__.icon)(iconLookup, _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, classes), transform), mask), {}, {\n        symbol: symbol,\n        title: title,\n        titleId: titleId,\n        maskId: maskId\n    }));\n    if (!renderedIcon) {\n        log(\"Could not find icon\", iconLookup);\n        return null;\n    }\n    var abstract = renderedIcon.abstract;\n    var extraProps = {\n        ref: ref\n    };\n    Object.keys(props).forEach(function(key) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (!FontAwesomeIcon.defaultProps.hasOwnProperty(key)) {\n            extraProps[key] = props[key];\n        }\n    });\n    return convertCurry(abstract[0], extraProps);\n});\nFontAwesomeIcon.displayName = \"FontAwesomeIcon\";\nFontAwesomeIcon.propTypes = {\n    beat: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    border: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    beatFade: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    bounce: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    className: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n    fade: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    flash: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    mask: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().object),\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().array),\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string)\n    ]),\n    maskId: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n    fixedWidth: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    inverse: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    flip: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf([\n        true,\n        false,\n        \"horizontal\",\n        \"vertical\",\n        \"both\"\n    ]),\n    icon: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().object),\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().array),\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string)\n    ]),\n    listItem: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    pull: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf([\n        \"right\",\n        \"left\"\n    ]),\n    pulse: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    rotation: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf([\n        0,\n        90,\n        180,\n        270\n    ]),\n    shake: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    size: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf([\n        \"2xs\",\n        \"xs\",\n        \"sm\",\n        \"lg\",\n        \"xl\",\n        \"2xl\",\n        \"1x\",\n        \"2x\",\n        \"3x\",\n        \"4x\",\n        \"5x\",\n        \"6x\",\n        \"7x\",\n        \"8x\",\n        \"9x\",\n        \"10x\"\n    ]),\n    spin: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    spinPulse: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    spinReverse: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n    symbol: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string)\n    ]),\n    title: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n    titleId: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n    transform: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n        (prop_types__WEBPACK_IMPORTED_MODULE_2___default().object)\n    ]),\n    swapOpacity: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool)\n};\nFontAwesomeIcon.defaultProps = {\n    border: false,\n    className: \"\",\n    mask: null,\n    maskId: null,\n    fixedWidth: false,\n    inverse: false,\n    flip: false,\n    icon: null,\n    listItem: false,\n    pull: null,\n    pulse: false,\n    rotation: null,\n    size: null,\n    spin: false,\n    spinPulse: false,\n    spinReverse: false,\n    beat: false,\n    fade: false,\n    beatFade: false,\n    bounce: false,\n    shake: false,\n    symbol: false,\n    title: \"\",\n    titleId: null,\n    transform: null,\n    swapOpacity: false\n};\nvar convertCurry = convert.bind(null, (react__WEBPACK_IMPORTED_MODULE_1___default().createElement));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@fortawesome+react-fontawesome@0.2.0_@fortawesome+fontawesome-svg-core@6.5.1_react@18.2.0/node_modules/@fortawesome/react-fontawesome/index.es.js\n");

/***/ })

};
;